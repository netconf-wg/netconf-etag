<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.12 -->
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-lindblad-netconf-transaction-id-00" category="std" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.2.1 -->
  <front>
    <title abbrev="NCTID">Transaction ID Mechanism for NETCONF</title>
    <seriesInfo name="Internet-Draft" value="draft-lindblad-netconf-transaction-id-00"/>
    <author initials="J." surname="Lindblad" fullname="Jan Lindblad">
      <organization>Cisco Systems</organization>
      <address>
        <email>jlindbla@cisco.com</email>
      </address>
    </author>
    <date year="2020" month="November" day="02"/>
    <area>General</area>
    <workgroup>NETCONF</workgroup>
    <keyword>Internet-Draft</keyword>
    <abstract>
      <t>NETCONF clients and servers often need to have a synchronized view of
the server's configuration data stores.  The volume of configuration 
data in a server may be very large, while data store changes typically
are small when observed at typical client resynchronization intervals.</t>
      <t>Rereading the entire data store and analyzing the response for changes
is a an inefficient mechanism for synchronization.  This document 
specifies an extension to NETCONF that allows clients and servers to
keep synchronized with a much smaller data exchange and without any
need for servers to store information about the clients.</t>
    </abstract>
    <note removeInRFC="true">
      <name>Discussion Venues</name>
      <t>Source for this draft and an issue tracker can be found at
  <eref target="https://github.com/janlindblad/netconf-transaction-id"/>.</t>
    </note>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" toc="default">
      <name>Introduction</name>
      <t>When a NETCONF client connects with a NETCONF server, a frequently 
occurring use case is for the client to find out if the configuration 
has changed since it was last connected.  Such changes could occur for 
example if another NETCONF client has made changes, or another system 
or operator made changes through other means than NETCONF.</t>
      <t>One way of detecting a change for a client would be to 
retrieve the entire configuration from the server, then compare 
the result with a previously stored copy at the client side.  This 
approach is not popular with most NETCONF users, however, since it 
would often be very expensive in terms of communications and 
computation cost.</t>
      <t>Furthermore, even if the configuration is reported to be unchanged, 
that will not guarantee that the configuration remains unchanged 
when a client sends a subsequent change request, which arrives soon 
thereafter.</t>
      <t>Evidence of a transaction-id feature being demanded by clients is that 
several server implementors have built proprietary and mutually 
incompatible mechanisms for obtaining a transaction id from a NETCONF 
server.</t>
      <t>RESTCONF, RFC 8040 <eref target="https://tools.ietf.org/html/rfc8040">RFC8040</eref>, 
defines a mechanism for detecting changes in configuration subtrees 
based on Entity-tags (ETags).  In conjunction with this, RESTCONF 
provides a way to make configuration changes conditional on the server
confiuguration being untouched by others. This mechanism leverages 
RFC 7232 <eref target="https://tools.ietf.org/html/rfc7232">RFC7232</eref> 
"Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests".</t>
      <t>This document defines similar functionality for NETCONF, 
RFC 6241 <eref target="https://tools.ietf.org/html/rfc6241">RFC6241</eref>.</t>
    </section>
    <section anchor="conventions-and-definitions" numbered="true" toc="default">
      <name>Conventions and Definitions</name>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in BCP 14 <xref target="RFC2119" format="default"/> <xref target="RFC8174" format="default"/>
when, and only when, they appear in all capitals, as shown here.</t>
    </section>
    <section anchor="netconf-extension" numbered="true" toc="default">
      <name>NETCONF Extension</name>
      <t>This document describes a NETCONF extension which modifies the 
behavior of get-config, get-data, edit-config and edit-data such
that clients are able to conditionally retrieve and update the 
configuration in a NETCONF server.  NETCONF servers that supports 
this extension MUST announce the capability "FIXME".</t>
      <t>The extended operations defined in this document pertains to YANG
containers and list elements.  It is NOT REQUIRED that a conforming 
server allows the extended operations to apply to all containers and 
list elements in the server configuration.  The set of containers and
list elements that the server supports with respect to this NETCONF
extension are collectively referred to as the "versioned elements".</t>
      <t>The NETCONF server will maintain a record of the transaction that
last changed each versioned element.  This transaction-id meta level
data is communicated between the server and client in the form of
an XML attribute called "entag".  The values for the entag attribute
is up to the clients and servers to decice as opaque quantities.  It
is essential that the entag values have a large value space in order
to not run out or collide.  They SHOULD be at least 32-bit quantities.</t>
      <t>Entag attribute values are encoded as YANG strings.</t>
      <ul empty="true" spacing="normal">
        <li>
          <t>Comment, to be removed  </t>
          <t>
  Do we want to limit the entag attribute strings in some way?
  E.g. only base64 characters, some min or max length, ...?</t>
        </li>
      </ul>
    </section>
    <section anchor="configuration-retreival" numbered="true" toc="default">
      <name>Configuration Retreival</name>
      <t>When a NETCONF client retrieves the configuration from a NETCONF 
server that implement this specification, it may request that the
configuration is entity tagged.  The entity tags are XML attributes 
added to some of the retrieved configuration elements by the server.
These elements are collectively called the "versioned elements".</t>
      <t>The entity-tag (entag) attributes are guaranteed to change every
time there has been a configuration change at or below the element
bearing the attribute.</t>
      <t>Clients request entity tags to be added by setting the
ietf-netconf-transaction-id:entag attribute to the value "?" on one or 
more elements in the request.  Entags MUST be returned for all 
descendant versioned elements.  In order to request that entags are 
returned for the entire configuration, the client can place the 
attribute on the top edit-config or edit-data tags.  For more specific
retrieval, the client inserts entag attributes in the filter section.</t>
      <t>To retrieve entag attributes across the entire NETCONF server 
configuration, a client might send:</t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="1"
     xmlns:ietf-netconf-transaction-id=
       "FIXME">
  <get-config ietf-netconf-transaction-id:entag="?"/>
</rpc>
]]></artwork>
      <t>To retrieve entag attributes for "ietf-interfaces", but not for "nacm",
a client might send:</t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="1"
     xmlns:ietf-netconf-transaction-id=
       "FIXME">
  <get-config>
    <source>
      <running/>
    </source>
    <filter>
      <interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces"
        ietf-netconf-transaction-id:entag="?"/>
      <nacm xmlns="urn:ietf:params:xml:ns:yang:ietf-netconf-acm"/>
    </filter>
  </get-config>
</rpc>
]]></artwork>
      <t>When a NETCONF server receives a get-config or get-data request 
containing ietf-netconf-transaction-id:entag attributes with the value 
"?", it MUST return entag attributes for all versioned elements below 
this point included in the reply.</t>
      <t>The server's response to request above might look like:</t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
<rpc-reply message-id="1"
           xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"
           xmlns:ietf-netconf-transaction-id=
             "FIXME">
  <data ietf-netconf-transaction-id:entag="def88884321">
    <interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces"
                ietf-netconf-transaction-id:entag="def88884321">
      <interface ietf-netconf-transaction-id:entag="def88884321">
        <name>GigabitEthernet-0/0</name>
        <description>Management Interface</description>
        <type>ianaift:ethernetCsmacd</type>
        <enabled>true</enabled>
      </interface>
      <interface ietf-netconf-transaction-id:entag="abc12345678">
        <name>GigabitEthernet-0/1</name>
        <description>Upward Interface</description>
        <type>ianaift:ethernetCsmacd</type>
        <enabled>true</enabled>
      </interface>
    </interfaces>
    <nacm xmlns="urn:ietf:params:xml:ns:yang:ietf-netconf-acm"/>
      <groups>
        <group>
          <name>admin</name>
          <user-name>sakura</user-name>
          <user-name>joe</user-name>
        </group>
      </groups>
    </nacm>
  </data>
</rpc>
]]></artwork>
      <section anchor="configuration-response-pruning" numbered="true" toc="default">
        <name>Configuration Response Pruning</name>
        <t>A NETCONF client that already knows some entag values may request that
the configuration retrieval request is pruned with respect to the 
client's prior knowledge.</t>
        <t>By specifying the previously received entag attribute values in the 
get-config or get-data request, the client indicates that child 
elements of already known parts of the configuration SHALL be omitted.</t>
        <t>To retrieve only changes for "ietf-interfaces" since the last known 
transaction-id "abc12345678", but include the entire configuration for 
"nacm", a client might send:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="1"
     xmlns:ietf-netconf-transaction-id=
       "FIXME">
  <get-config>
    <source>
      <running/>
    </source>
    <filter>
      <interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces"
        ietf-netconf-transaction-id:entag="abc12345678"/>
      <nacm xmlns="urn:ietf:params:xml:ns:yang:ietf-netconf-acm"/>
    </filter>
  </get-config>
</rpc>
]]></artwork>
        <t>When a NETCONF server receives a get-config or get-data request 
containing ietf-netconf-transaction-id:entag attributes with the same
value as the entag value known by the server for that element, it MUST 
prune the contents of that subtree.</t>
        <t>In case the element with a matching entag value is a container, the
container tag is returned with an entag attribute value of "=".  No
child elements are returned for the container.</t>
        <t>In case the element with a matching entag value is a list element, the
list element tag is returned with an entag attribute value of "=".
The list element will include the list elemenet keys, but no other 
child elements.</t>
        <t>For example, assuming the NETCONF server configuration is the same as 
in the previous rpc-reply example, the server's response to request 
above might look like:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
<rpc-reply message-id="1"
           xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"
           xmlns:ietf-netconf-transaction-id=
             "FIXME">
  <data ietf-netconf-transaction-id:entag="def88884321">
    <interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces"
                ietf-netconf-transaction-id:entag="def88884321">
      <interface ietf-netconf-transaction-id:entag="def88884321">
        <name>GigabitEthernet-0/0</name>
        <description>Management Interface</description>
        <type>ianaift:ethernetCsmacd</type>
        <enabled>true</enabled>
      </interface>
      <interface ietf-netconf-transaction-id:entag="=">
        <name>GigabitEthernet-0/1</name>
      </interface>
    </interfaces>
    <nacm xmlns="urn:ietf:params:xml:ns:yang:ietf-netconf-acm"/>
      <groups>
        <group>
          <name>admin</name>
          <user-name>sakura</user-name>
          <user-name>joe</user-name>
        </group>
      </groups>
    </nacm>
  </data>
</rpc>
]]></artwork>
      </section>
    </section>
    <section anchor="configuration-update" numbered="true" toc="default">
      <name>Configuration Update</name>
      <t>When a NETCONF client sends an edit-config or edit-data request to a
NETCONF server that implements this specification, the client MAY 
specify a transaction-id value.</t>
      <t>If specified, the server MUST use this value as the new value for all
entag attribute values of any versioned element touched by the 
transaction, if and only if the operation is successful.  The entag 
value must be updated regardless of whether an actual value change 
took place or not.  An element is touched if it is mentioned in the 
transaction, even if it merely sets the element to the same value it 
already has.</t>
      <t>If the server side configuration changes for any reason, and there
is no transaction-id value specified by a client, servers that supports 
this specification MUST update the entag values as if a NETCONF client 
had made the change and specified a transaction-id.  In this case, the 
server MUST choose a random transaction-id value to use.</t>
      <ul empty="true" spacing="normal">
        <li>
          <t>Comment, to be removed  </t>
          <t>
  Is talk about "random" good enough, or do we need to get specific?</t>
        </li>
      </ul>
      <t>Every time a versioned element has its entag value updated, the same
value must be set to all parent versioned elements' entag attributes, 
cascading all the way to the datastore root.</t>
      <t>For example, if a client wishes to update the interface description
for interface "GigabitEthernet-0/1" to "Downward Interface", under 
transaction-id "ghi55550101", it might send:</t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="1"
     xmlns:ietf-netconf-transaction-id=
       "FIXME">
  <edit-config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
    <target>
      <candidate/>
    </target>
    <test-option>test-then-set</test-option>
    <ietf-netconf-transaction-id:transaction-id>
      ghi55550101
    </transaction-id>
    <config>
      <interfaces 
        xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces">
        <interface>
          <name>GigabitEthernet-0/1</name>
          <description>Downward Interface</description>
        </interface>
      </interfaces>
    </config>
  </edit-config>
</rpc>
]]></artwork>
      <t>A subsequent get-config request for "ietf-interfaces", with 
ietf-netconf-transaction-id:entag="?" might then return:</t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
<rpc-reply message-id="1"
           xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"
           xmlns:ietf-netconf-transaction-id=
             "FIXME">
  <data>
    <interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces"
                ietf-netconf-transaction-id:entag="ghi55550101">
      <interface ietf-netconf-transaction-id:entag="def88884321">
        <name>GigabitEthernet-0/0</name>
        <description>Management Interface</description>
        <type>ianaift:ethernetCsmacd</type>
        <enabled>true</enabled>
      </interface>
      <interface ietf-netconf-transaction-id:entag="ghi55550101">
        <name>GigabitEthernet-0/1</name>
        <description>Downward Interface</description>
        <type>ianaift:ethernetCsmacd</type>
        <enabled>true</enabled>
      </interface>
    </interfaces>
  </data>
</rpc>
]]></artwork>
      <t>In case the server received a configuration change from another 
source, such as a CLI operator, adding an MTU value for the interface 
"GigabitEthernet-0/0", a subsequent get-config request for 
"ietf-interfaces", with ietf-netconf-transaction-id:entag="?" might 
then return:</t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
<rpc-reply message-id="1"
           xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"
           xmlns:ietf-netconf-transaction-id=
             "FIXME">
  <data ietf-netconf-transaction-id:entag="auto22223333">
    <interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces"
                ietf-netconf-transaction-id:entag="auto22223333">
      <interface ietf-netconf-transaction-id:entag="auto22223333">
        <name>GigabitEthernet-0/0</name>
        <description>Management Interface</description>
        <type>ianaift:ethernetCsmacd</type>
        <enabled>true</enabled>
        <mtu>768</mtu>
      </interface>
      <interface ietf-netconf-transaction-id:entag="ghi55550101">
        <name>GigabitEthernet-0/1</name>
        <description>Downward Interface</description>
        <type>ianaift:ethernetCsmacd</type>
        <enabled>true</enabled>
      </interface>
    </interfaces>
  </data>
</rpc>
]]></artwork>
      <section anchor="conditional-configuration-update" numbered="true" toc="default">
        <name>Conditional Configuration Update</name>
        <t>Conditional Transactions are useful when a client is interested to
make a configuration change, being sure that the server configuration
has not changed since the client last inspected it.</t>
        <t>By supplying the latest entag values known to the client
in its change requests (edit-config etc.), it can request the server 
to reject the transaction in case any changes have occurred at the 
server that the client is not yet aware of.</t>
        <t>Even if a client is constantly connected to a device, and even possibly
receiving notifications when a server device's configuration changes,
there is always a possibility that a change is introduced by another
party in the time window between when the client last received an 
update about the server's configuration until the server executes a 
configuration change request.</t>
        <t>By leveraging conditional transactions, this race condition can be 
eliminated efficiently.  If the client provides the transaction-id
it expects the device to have as part of it's configuration change 
request, and the device guarantees to only execute the request in case 
the transaction-id in the request matches that on the server, the race 
condition is removed.</t>
        <t>When a NETCONF client sends an edit-config or edit-data request to a
NETCONF server that implements this specification, the client MAY 
specify expected entag values on the versioned elements touched by the
transaction.</t>
        <t>If such an entag value differs from the entag value stored on the 
server, the server MUST reject the transaction.</t>
        <t>If the server rejects the transaction because the configuration entag
value differs from the client's expectation, ther server MUST return
an rpc-error with the following values:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
   error-tag:      operation-failed
   error-type:     protocol
   error-severity: error
]]></artwork>
        <t>Additionally, the error-info tag MUST contain a sx:structure
entag-value-mismatch-error-info, with mismatch-path set to the 
instance identifier value identifying one of the versioned elements 
that had an entag value mismatch, and mismatch-entag-value set to
the server's current value of the entag attribute for that versioned
element.</t>
        <t>For example, if a client wishes to delete the interface 
"GigabitEthernet-0/1" if and only if its configuration has not been
altered since this client last synchronized its configuration with the
server (at which point it received a transaction-id "ghi55550101"), 
regardless of any possible changes to other interfaces, it might send:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="1"
     xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0" 
     xmlns:ietf-netconf-transaction-id=
       "FIXME">
  <edit-config>
    <target>
      <candidate/>
    </target>
    <test-option>test-then-set</test-option>
    <config>
      <interfaces 
        xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces">
        <interface nc:operation="delete" 
                   ietf-netconf-transaction-id:entag="ghi55550101">
          <name>GigabitEthernet-0/1</name>
        </interface>
      </interfaces>
    </config>
  </edit-config>
</rpc>
]]></artwork>
        <t>If interface "GigabitEthernet-0/1" has the entag value "ghi55550101",
as expected by the client, the transaction goes through.</t>
        <t>A subsequent get-config request for "ietf-interfaces", with 
ietf-netconf-transaction-id:entag="?" might then return:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
<rpc-reply message-id="1"
           xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"
           xmlns:ietf-netconf-transaction-id=
             "FIXME">
  <data ietf-netconf-transaction-id:entag="auto77775511">
    <interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces"
                ietf-netconf-transaction-id:entag="auto77775511">
      <interface ietf-netconf-transaction-id:entag="def88884321">
        <name>GigabitEthernet-0/0</name>
        <description>Management Interface</description>
        <type>ianaift:ethernetCsmacd</type>
        <enabled>true</enabled>
      </interface>
    </interfaces>
  </data>
</rpc>
]]></artwork>
        <t>If interface "GigabitEthernet-0/1" did not have the entag value 
"ghi55550101", the server rejects the transaction, and might send:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
<rpc-reply xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" 
           xmlns:if="urn:ietf:params:xml:ns:yang:ietf-interfaces"
           xmlns:ietf-netconf-transaction-id=
             "FIXME">
           message-id="1">
  <rpc-error>
    <error-type>protocol</error-type>
    <error-tag>operation-failed</error-tag>
    <error-severity>error</error-severity>
    <error-info>
      <ietf-netconf-transaction-id:entag-value-mismatch-error-info>
        <ietf-netconf-transaction-id:mismatch-path>
          /if:interfaces/if:interface[if:name="GigabitEthernet-0/0"]
        </ietf-netconf-transaction-id:mismatch-path>
        <ietf-netconf-transaction-id:mismatch-entag-value>
          auto77775511
        </ietf-netconf-transaction-id:mismatch-entag-value>
      </ietf-netconf-transaction-id:entag-value-mismatch-error-info>
    </error-info>
  </rpc-error>
</rpc-reply>
]]></artwork>
        <ul empty="true" spacing="normal">
          <li>
            <t>Comment, to be removed  </t>
            <t>
  In order to reach the full flexibility with the above transaction 
  rejection mechanism, it might make sense to reference parts of the
  configuration just to see that they have not moved, with no intent
  to make changes there.
  To support this use case, a new operation mode "nocreate" might be
  useful.  This would allow an edit config to talk about parts of the
  configuration which are expected to exist with a particular 
  confiuguration, and to abort the transaction if they do not exist.</t>
          </li>
        </ul>
        <ul empty="true" spacing="normal">
          <li>
            <t>Comment, to be removed  </t>
            <t>
  NETCONF clients may be equally interested to apply a mechanism
  similar to entags when retrieving operational state as well,
  since there is often vey much of this data, and some if changes
  rather rarely.  To support this use case, some sort of server
  maintained change indicators may be invented, and combined with
  a similar retrieval filter.</t>
          </li>
        </ul>
      </section>
    </section>
    <section anchor="yang-modules" numbered="true" toc="default">
      <name>YANG Modules</name>
      <ul empty="true" spacing="normal">
        <li>
          <t>Comment, to be removed  </t>
          <t>
  This is YANG 1.1. Do we also want 1.0? Makes it possible to implement on 1.0 servers</t>
        </li>
      </ul>
      <artwork type="yang" name="" align="left" alt=""><![CDATA[
module ietf-netconf-transaction-id {
  yang-version 1.1;
  namespace 
    'urn:ietf:params:xml:ns:yang:ietf-netconf-transaction-id';
  prefix ietf-netconf-transaction-id;

  import ietf-netconf {
    prefix nc;
  }

  import ietf-netconf-nmda {
    prefix ncds;
  }

  import ietf-yang-structure-ext {
    prefix sx;
  }

  organization
    "IETF NETCONF (Network Configuration) Working Group";

  contact
    "WG Web:   <http://tools.ietf.org/wg/netconf/>
     WG List:  <netconf@ietf.org>

     Author:   Jan Lindblad
               <mailto:jlindbla@cisco.com>";

  description
    "NETCONF Transaction ID aware operations for NMDA.

     Copyright (c) 2020 IETF Trust and the persons identified as
     the document authors.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2020-10-01 {
    description
      "Initial revision";
    reference
      "RFC XXXX: Xxxxxxxxx";
  }

  typedef transaction-id-t {
    type string;
    description 
      "Unique value representing a specific transaction";
  }

  grouping transaction-id-grouping {
    leaf transaction-id {
      type transaction-id-t;
      description
        "Transaction-id value selected by the client.  This string
         should be chosen to give a high probability to be unique on
         the server.";
    }
    description
      "Grouping for transaction-id, to be augmented into rpcs
       that modify configuration data stores.";
  }

  augment /nc:edit-config/nc:input {
    uses transaction-id-grouping;
    description
      "Injects the transaction-id leaf into the edit-config
      operation";
  }

  augment /ncds:edit-data/ncds:input {
    uses transaction-id-grouping;
    description
      "Injects the transaction-id leaf into the edit-data
      operation";
  }

  sx:structure entag-value-mismatch-error-info {
    container entag-value-mismatch-error-info {
      description
         "This error is returned by a NETCONF server when a client
          sends a configuration change request, with the additonal
          condition that the server aborts the transaction if the
          server's configuration has changed from what the client
          expects, and the configuration is found not to actually
          not match the client's expectation.";
      leaf mismatch-path {
        type instance-identifier;
        description
          "Indicates the YANG path to the element with a mismatching
           entag value.";
      }
      leaf mismatch-entag-value {
        type transaction-id-t;
        description
          "Indicates server's value of the entag attribute for one
           mismatching element.";
      }
    }
  }
}
]]></artwork>
    </section>
    <section anchor="security-considerations" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>TODO Security</t>
    </section>
    <section anchor="iana-considerations" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document has no IANA actions.</t>
    </section>
  </middle>
  <back>
    <references>
      <name>Normative References</name>
      <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119">
        <front>
          <title>Key words for use in RFCs to Indicate Requirement Levels</title>
          <author initials="S." surname="Bradner" fullname="S. Bradner">
            <organization/>
          </author>
          <date year="1997" month="March"/>
          <abstract>
            <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
          </abstract>
        </front>
        <seriesInfo name="BCP" value="14"/>
        <seriesInfo name="RFC" value="2119"/>
        <seriesInfo name="DOI" value="10.17487/RFC2119"/>
      </reference>
      <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174">
        <front>
          <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
          <author initials="B." surname="Leiba" fullname="B. Leiba">
            <organization/>
          </author>
          <date year="2017" month="May"/>
          <abstract>
            <t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
          </abstract>
        </front>
        <seriesInfo name="BCP" value="14"/>
        <seriesInfo name="RFC" value="8174"/>
        <seriesInfo name="DOI" value="10.17487/RFC8174"/>
      </reference>
    </references>
    <section numbered="false" anchor="acknowledgments" toc="default">
      <name>Acknowledgments</name>
      <t>TODO acknowledge.</t>
    </section>
  </back>
  <!-- ##markdown-source:
H4sIAPQIoF8AA+1cWXPbRrZ+71/Rl/Ngu4qkJMdZhpaV0dhKoilv15YrSaVS
t5pAk0SMhYMGJHNSzm+/3zm9oAFSmyc3Gde1HmwQ6OX02ZfunkwmosmaXM/k
6KxWpVFJk1WlPH0in+lkpcrMFHJR1fL5ydnjF8+/GQk1n9f6HM2fPz47fTIS
aZWUqkD/tFaLZpJnZTrPVTopdZNU5WLSdKNOsnSyvy8S1ehlVW9m0jSpENm6
nsmmbk1zf3//r/v3haq1mslvdalrlYuLqn67rKt2PfMwiLd6g7fpTJ6Wja4x
0eQJzS2EaVSZ/o/KqxLwbLQR62wmf2qqZCxNVTe1Xhg8bQp6+FkI1Tarqp4J
ORESf1lpZvIfU/nULYFf2rX9Q5X911W9BG7+pWhZM/k4M0klX29MowvD33Wh
snwmf3Ho+FtCLaZJVQhRVnWBfucaE8tX3zy+f3Dw1xnQUC66D/ibTCZSzQ3Q
l2BlbukyyTNdNkZindLo+lzXRlaLRpey1DqVTSVX6lxLhVWWyaquACNen2f6
As1Es9Ku1x0jiTrZsq15DTJVDTo1Va3NVMozNDyv8rbQ6DZoKbhpVtIkPJYs
1EbO0UHXG5mreqnH8mKV5ToaVBIvLbWRzWadJSrPN0RmaQo8ojHgr+Y8WipV
4xu51UrAFFZjYciI8OcqN1MhXmnwS5qVS0nLQ/us7s1MqFKlyjf/8m0w3roq
jWbGdoCJDEhFOwytF4ss4YmLnggMgGA0oRcEAHhCa2HWOskWmSbySP0OVDEE
LIjiydessDosubowO0nZVGBuve5T7yJrVoCtaJOVRRhQzuvT7yzwPAS1qlqM
Xm4E8wKDHMZ1yAhcBrjUnNoTQhwoU8t1RZamuRbiLyRfdZW2LLxCfE9kUrLP
isQcpU6wDgem/2ynHuPNotb/bNE030hRJUlb10SIFvhPFP4BCgnUDg6CdgG5
kQRetrBf+iy4UsYRDrjLygSjNPICL3NlAkg6BYleE9Y88yVVm2NYgoHnFPqd
KtZgVMyiygoT1cPl0UyFSgMDjyH6oa1hiceqalmtoa2A4l5jgA7NtVxJ27zQ
UIXEA6WfBRh/UWpAviE5S3UDsAk5yo3AUCoPywWDD0kDgkStmzrTkPWI6/tY
WtRVITuRH9NziTbFmkRPOElo88aTbg3FnlWtAaGYW1I0Xm9YIDvimCzVnvWF
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
wq1eAAA=

-->

</rfc>
